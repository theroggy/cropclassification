# Specific settings for this marker.

[general]
run_id = 4

[marker]
markertype = CROPGROUP

# strategy to balance the training dataset for the marker.
balancing_strategy = BALANCING_STRATEGY_MEDIUM2

# start date of timeseries data to use
# remarks: nearest monday will be used + year will be replaced in run-time
start_date_str = ${year}-03-03 
# end date of timeseries data to use
# remarks: end date is NOT inclusive + year will be replaced in run-time
end_date_str = ${year}-03-20

# add classes that should be ignored for training, but have to get a prediction
classes_to_ignore_for_train = ${classes_to_ignore_for_train_default}, MON_ONBEKEND_MET_KLASSIFICATIE
# add classes that will be ignored for training and won't receive a prediction 
classes_to_ignore = ${classes_to_ignore_default}, MON_SUBSIDIABEL_NIET, MON_MOEILIJK_ZONDER_KLASSIFICATIE, MON_MOEILIJK_ZONDER_KLASSIFICATIE_NS, MON_GRASSEN_BRAAK_NIETSUB, MON_HEG_RIJ_POEL, MON_STAL_GEB, MON_GEEN_HOOFDTEELT, MON_CONTAINERS, MON_OVERK_LOO

# classes that should specified as unipmortant in the reporting
# Remark: this doesn't influence the training or predicting, these need to be set in 
# the other paremeters!
classes_to_ignore_unimportant = ${classes_to_ignore_unimportant_default}, MON_STAL_GEB, MON_SUBSIDIABEL_NIET, MON_GRASSEN_BRAAK_NIETSUB, MON_MOEILIJK_ZONDER_KLASSIFICATIE_NS

# The sensor data to be used for this marker
sensordata_to_use = ["s2-agri-weekly", {"s1-grd-sigma0-asc-weekly": ["VV", "VH"]}, {"s1-grd-sigma0-desc-weekly": ["VV", "VH"]}]

[columns]
# Column name of the classes to prepropress to in the refe file
class_refe = MON_CROPGROUP

[classifier]
# The classifier type to use. Currently supported types:
#     * keras_multilayer_perceptron (using keras)
#     * multilayer_perceptron (using sklearn)
#     * nearestneighbour
#     * randomforest
#     * svm
classifier_type = randomforest
#classifier_type = keras_multilayer_perceptron
# The extension of the file format to save the trained model to
classifier_ext = .hdf5

[postprocess]
# Doubt: if highest probability < 2*second probability  
doubt_proba1_st_2_x_proba2 = False
# Doubt: if prediction == input class and highest probability < pct
doubt_pred_eq_input_proba1_st_pct = 0
# Doubt: if prediction != input class and highest probability < pct
doubt_pred_ne_input_proba1_st_pct = 94.5
